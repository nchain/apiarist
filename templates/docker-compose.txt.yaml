version: '3.4'
networks:
  bee_hive:
    external: true

services:
{% if containers.prometheus %}
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - 9090:9090
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./prometheus/:/etc/prometheus/:ro
      - {{ paths.root }}/prometheus:/prometheus
    depends_on:
      - cadvisor
{% endif %}

{% if containers.cadvisor %}
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    ports:
      - 8080:8080
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
{% endif %}

{% if containers.node_exporter %}
  node-exporter:
    image: prom/node-exporter:latest
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    ports:
      - 9100:9100
{% endif %}

{% if containers.alertmanager %}
  alertmanager:
    image: prom/alertmanager:latest
    ports:
      - 9093:9093
    volumes:
      - ./alertmanager/:/etc/alertmanager/
    restart: always
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
    depends_on:
      - prometheus
{% endif %}

{% if containers.grafana %}
  grafana:
    image: grafana/grafana:latest
    depends_on:
      - prometheus
    ports:
      - {{ network.grafana_port }}:3000
    volumes:
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    env_file:
      - ./grafana/config.monitoring
    restart: always
{% endif %}

{% if containers.geth_goerli %}
  geth-goerli:
    image: ethereum/client-go:{{ versions.geth }}
    container_name: geth-goerli
    ports:
      - {{ network.geth_http_port }}:8545
      - {{ network.geth_ws_port }}:8546
      - 30303:30303
    volumes:
      - {{ paths.root }}/ethereum:/root/.ethereum
    restart: always
    networks:
      - bee_hive
    command:
      - '--goerli'
      - '--syncmode=light'
      - '--http'
      - '--http.corsdomain=*'
      - '--http.vhosts=*'
      - '--http.addr=0.0.0.0'
      - '--cache=2048'
      - '--ws'
      - '--ws.addr=0.0.0.0'
      - '--metrics'
{% endif %}

{% if containers.geth_goerli_exporter %}
  geth-goerli-exporter:
    image: hunterlong/gethexporter:latest
    ports:
      - 9101:9090
    environment:
      - GETH=http://geth-goerli:8545
    depends_on:
      - geth-goerli
{% endif %}

{% if containers.clef %}
  clef:
    image: ethersphere/clef:{{ versions.clef }}
    container_name: clef
    restart: unless-stopped
    networks:
      - bee_hive
    ports:
      - 0.0.0.0:8550:8550
    environment:
      - CLEF_CHAINID
    volumes:
      - {{ paths.root }}/clef:/app/data
    command: full
{% endif %}

{% if containers.bees %}
  {% for address in accounts %}
    {% if bee_host_ips |length <= 1 %}
      {% set host_ip = network.external_ip_addr %}
      {% set api_port = 1633 + loop.index0 * 3 %}
      {% set p2p_port = 1634 + loop.index0 * 3 %}
    {% else %}
      {% set host_ip = bee_host_ips[ loop.index0 ] %}
      {% set api_port = 1633 %}
      {% set p2p_port = 1634 %}
    {% endif %}
    {% set debug_api_port = 1635 + loop.index0 * 3 %}
    {% if nat %}
      {% set nat_port = network.base_external_port + loop.index0 %}
      {% set api_port = 1633 + loop.index0 %}
      {% set p2p_port = 1634 + loop.index0 %}
    {% endif %}
  bee-{{ loop.index }}:
    image: ethersphere/bee:{{ versions.bee }}
    container_name: bee-{{ loop.index }}
    restart: unless-stopped
    networks:
      - bee_hive
    environment:
      - BEE_CLEF_SIGNER_ETHEREUM_ADDRESS={{ address }}
    {% if nat %}
      - BEE_NAT_ADDR=:{{ nat_port }}
    {% endif %}      
      - BEE_API_ADDR
      - BEE_BOOTNODE
      - BEE_BOOTNODE_MODE
      - BEE_CLEF_SIGNER_ENABLE
      - BEE_CLEF_SIGNER_ENDPOINT
      - BEE_CONFIG
      - BEE_CORS_ALLOWED_ORIGINS
      - BEE_DATA_DIR
      - BEE_DB_CAPACITY
      - BEE_DB_OPEN_FILES_LIMIT
      - BEE_DB_BLOCK_CACHE_CAPACITY
      - BEE_DB_WRITE_BUFFER_SIZE
      - BEE_DB_DISABLE_SEEKS_COMPACTION
      - BEE_DEBUG_API_ADDR
      - BEE_DEBUG_API_ENABLE
      - BEE_GATEWAY_MODE
      - BEE_GLOBAL_PINNING_ENABLE
      - BEE_NETWORK_ID
      - BEE_P2P_ADDR
      - BEE_P2P_QUIC_ENABLE
      - BEE_P2P_WS_ENABLE
      - BEE_PASSWORD
      - BEE_PASSWORD_FILE
      - BEE_PAYMENT_EARLY
      - BEE_PAYMENT_THRESHOLD
      - BEE_PAYMENT_TOLERANCE
      - BEE_RESOLVER_OPTIONS
      - BEE_STANDALONE
      - BEE_SWAP_ENABLE
      - BEE_SWAP_ENDPOINT
      - BEE_SWAP_FACTORY_ADDRESS
      - BEE_SWAP_INITIAL_DEPOSIT
      - BEE_TRACING_ENABLE
      - BEE_TRACING_ENDPOINT
      - BEE_TRACING_SERVICE_NAME
      - BEE_VERBOSITY
      - BEE_WELCOME_MESSAGE
      - BEE_FULL_NODE
      - BEE_TRANSACTION
      - BEE_MAINNET
    ports:
      - "{{ host_ip }}:{{ api_port }}:1633"
      - "{{ host_ip }}:{{ p2p_port }}:1634"
      - "127.0.0.1:{{ debug_api_port }}:1635"
    volumes:
      - {{ paths.root }}/bee-{{ loop.index }}:/home/bee/.bee
      - {{ paths.root }}/password:/home/bee/.bee/password
    command: start
  {% if containers.clef %}
    depends_on:
      - clef
  {% endif %}
  {% endfor %}
{% endif %}